manual_rules() {
    echo "‚úçÔ∏è Configuraci√≥n manual de reglas de firewall"
    echo "------------------------------------------------"
    
    while true; do
        echo -e "\nüìå Men√∫ de Reglas Manuales:"
        echo "1. A√±adir nueva regla"
        echo "2. Ver reglas actuales"
        echo "3. Eliminar regla espec√≠fica"
        echo "4. Volver al men√∫ principal"
        
        read -rp "Selecciona una opci√≥n (1-4): " manual_choice

        case $manual_choice in
            1)
                echo -e "\nüîß Configuraci√≥n de nueva regla"
                
                # Selecci√≥n de protocolo
                echo "Protocolos disponibles:"
                echo "1. TCP"
                echo "2. UDP"
                echo "3. ICMP"
                echo "4. Cualquiera (all)"
                while true; do
                    read -rp "üåê Selecciona el protocolo (1-4): " proto_choice
                    case $proto_choice in
                        1) protocol="tcp"; break ;;
                        2) protocol="udp"; break ;;
                        3) protocol="icmp"; break ;;
                        4) protocol=""; break ;;
                        *) echo "‚ùå Opci√≥n no v√°lida." ;;
                    esac
                done

                # Configuraci√≥n del puerto (solo para TCP/UDP)
                if [[ "$protocol" == "tcp" || "$protocol" == "udp" ]]; then
                    while true; do
                        read -rp "üî¢ Puerto (1-65535) o rango (ej: 80-100): " port
                        if [[ "$port" =~ ^[0-9]+$ && "$port" -ge 1 && "$port" -le 65535 ]] || 
                           [[ "$port" =~ ^[0-9]+-[0-9]+$ && $(echo "$port" | cut -d'-' -f1) -ge 1 && $(echo "$port" | cut -d'-' -f2) -le 65535 ]]; then
                            break
                        else
                            echo "‚ùå Puerto o rango inv√°lido"
                        fi
                    done
                fi

                # Selecci√≥n de acci√≥n
                echo "Acciones disponibles:"
                echo "1. accept (permitir)"
                echo "2. reject (rechazar con respuesta)"
                echo "3. drop (descartar sin respuesta)"
                while true; do
                    read -rp "üö¶ Selecciona la acci√≥n (1-3): " action_choice
                    case $action_choice in
                        1) action="accept"; break ;;
                        2) action="reject with tcp reset"; break ;;
                        3) action="drop"; break ;;
                        *) echo "‚ùå Opci√≥n no v√°lida." ;;
                    esac
                done

                # Configuraci√≥n de logging
                read -rp "üìù ¬øA√±adir registro (log)? (s/n): " log_choice
                if [[ "$log_choice" == "s" ]]; then
                    read -rp "‚úèÔ∏è Mensaje para el log: " log_message
                    log_part="counter log prefix \"$log_message: \""
                else
                    log_part=""
                fi

                # Construir la regla seg√∫n el protocolo
                if [[ "$protocol" == "tcp" || "$protocol" == "udp" ]]; then
                    rule="$protocol dport $port $log_part $action"
                elif [[ "$protocol" == "icmp" ]]; then
                    rule="icmp type echo-request $log_part $action"
                else
                    rule="$log_part $action"
                fi

                # A√±adir la regla
                if nft "add rule inet firewall_travieso input $rule"; then
                    echo "‚úÖ Regla a√±adida correctamente"
                else
                    echo "‚ùå Error al a√±adir la regla"
                fi
                ;;
            
            2)
                echo -e "\nüìã Reglas actuales:"
                nft -a list chain inet firewall_travieso input
                read -rp "Presiona Enter para continuar..."
                ;;
            
            3)
                echo -e "\nüóëÔ∏è Eliminar regla"
                nft -a list chain inet firewall_travieso input
                read -rp "Handle de la regla a eliminar (n√∫mero): " handle
                if [[ "$handle" =~ ^[0-9]+$ ]]; then
                    if nft delete rule inet firewall_travieso input handle "$handle"; then
                        echo "‚úÖ Regla eliminada correctamente"
                    else
                        echo "‚ùå Error al eliminar la regla"
                    fi
                else
                    echo "‚ùå Handle inv√°lido"
                fi
                ;;
            
            4)
                echo "‚Ü©Ô∏è Volviendo al men√∫ principal..."
                return
                ;;
            
            *)
                echo "‚ùå Opci√≥n no v√°lida"
                ;;
        esac
    done
}
